PyCon 2014 website being built by Caktus Consulting Group, based on symposion.

Rather than use this as the basis for your conference site directly, you should
instead look at https://github.com/pinax/symposion which was designed for reuse.

PyCon 2014 is built on top of Pinax Symposion but may have customizations that
will just make things more difficult for you.

To get running locally
----------------------

* Create a new virtualenv and activate it.
* Install the requirements for running and testing locally::

    pip install -r requirements/dev.txt

  (For production, install -r requirements/project.txt).
* Create a ``local_settings.py`` file at the top level of this tree.
* Copy the ``DATABASES`` setting from ``symposion/settings.py`` into
  ``local_settings.py``
* Edit the ``DATABASES`` setting for your own database server. We'll assume
  you leave the server type as Postgres and the database name as pycon2014.
* Create your database::

    createdb pycon2014

* Initialize the database and apply migrations::

    python manage.py updatedb --execute

  (This is different from ``syncdb`` because the code currently uses
  Nashvegas.)

* Run local server::

    python manage.py runserver

For production
--------------

* Start with instructions above, until you get to `Run local server`
* Edit ``local_settings.py`` to make sure DEBUG=False.
* Add an appropriate ALLOWED_HOSTS setting (https://docs.djangoproject.com/en/1.5/ref/settings/#std:setting-ALLOWED_HOSTS)
* Install ``lessc`` (Go to http://lesscss.org and search for "Server-side usage")
* Pre-compress everything by running::

    python manage.py compress --force

  That will write compressed css and js files under site_media
* Gather the static files:

    python manage.py collectstatic --noinput

* Arrange to serve the site_media directory as /2014/site_media/whatever.
* Arrange to serve the wsgi application in symposion/wsgi.py at /, running
  with the same virtualenv (or equivalent).  It will only handle URLs
  starting with /2014 though, so you don't have to pass it any other requests.

To run tests
------------

    python manage.py test
